{
	"Custom hash and setIO": {
		"prefix": "Custom hash and setIO",
		"body": [
		  "",
		  "void setIO()",
		  "{",
		  "#ifndef ONLINE_JUDGE",
		  "    freopen(\"input.txt\", \"r\", stdin);",
		  "",
		  "    freopen(\"output.txt\", \"w\", stdout);",
		  "#endif // ONLINE_JUDGE",
		  "}",
		  "",
		  "struct custom_hash",
		  "{",
		  "    static uint64_t splitmix64(uint64_t x)",
		  "    {",
		  "        x += 0x9e3779b97f4a7c15;",
		  "        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;",
		  "        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;",
		  "        return x ^ (x >> 31);",
		  "    }",
		  "    size_t operator()(uint64_t x) const",
		  "    {",
		  "        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();",
		  "        return splitmix64(x + FIXED_RANDOM);",
		  "    }",
		  "};",
		  ""
		],
		"description": "Custom hash and setIO"
	  }
}