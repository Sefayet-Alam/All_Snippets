{
	"Suffix Array OP (nlogn)": {
  "prefix": "Suffix Array OP (nlogn)",
  "body": [
    "void countSort(vector<ll>&p,vector<ll>&c)",
    "{",
    "    ll n=p.size();",
    "    vector<ll>cnt(n);",
    "    for(auto it:c) cnt[it]++;",
    "    vector<ll>p_new(n),pos(n);",
    "    pos[0]=0;",
    "    for(ll i=1;i<n;i++) pos[i]=pos[i-1]+cnt[i-1];",
    "    for(auto it:p)",
    "    {",
    "        ll i=c[it];",
    "        p_new[pos[i]]=it;",
    "        pos[i]++;",
    "    }",
    "    p=p_new;",
    "}",
    "vector<ll>SuffixArray(string &s)",
    "{",
    "    s+='$';",
    "    ll n=s.size();",
    "    vector<pair<char,ll>>suf(n);",
    "    for(ll i=0;i<n;i++) suf[i]={s[i],i};",
    "    sort(suf.begin(),suf.end());",
    "    vector<ll>p(n),c(n);",
    "    for(ll i=0;i<n;i++) p[i]=suf[i].second;",
    "    c[p[0]]=0;",
    "    for(ll i=1;i<n;i++)",
    "    {",
    "        if(suf[i].first==suf[i-1].first) c[p[i]]=c[p[i-1]];",
    "        else c[p[i]]=c[p[i-1]]+1;",
    "    }",
    "    ll k=0;",
    "    while((1<<k)<n)",
    "    {",
    "        for(ll i=0;i<n;i++) p[i]=(p[i]-(1<<k)+n)%n;",
    "        countSort(p,c);",
    "        vector<ll>c_new(n);",
    "        c_new[p[0]]=0;",
    "        for(ll i=1;i<n;i++)",
    "        {",
    "            pair<ll,ll>last={c[p[i-1]],c[(p[i-1]+(1<<k))%n]};",
    "            pair<ll,ll>cur={c[p[i]],c[(p[i]+(1<<k))%n]};",
    "            if(cur==last) c_new[p[i]]=c_new[p[i-1]];",
    "            else c_new[p[i]]=c_new[p[i-1]]+1;",
    "        }",
    "        c=c_new;",
    "        k++;",
    "    }",
    "    return p;",
    "}"
  ],
  "description": "Suffix Array OP (nlogn)"
}
}