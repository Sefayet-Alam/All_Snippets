{
	"Suffix Array O(nlog^2n)": {
  "prefix": "Suffix Array ITMO O(nlog^2n)",
  "body": [
    "vector<ll>SuffixArray(string &s)",
    "{",
    "    s+='$';",
    "    ll n=s.size();",
    "    vector<pair<char,ll>>suf(n);",
    "    for(ll i=0;i<n;i++) suf[i]={s[i],i};",
    "    sort(suf.begin(),suf.end());",
    "    vector<ll>p(n),c(n);",
    "    for(ll i=0;i<n;i++) p[i]=suf[i].second;",
    "    c[p[0]]=0;",
    "    for(ll i=1;i<n;i++)",
    "    {",
    "        if(suf[i].first==suf[i-1].first) c[p[i]]=c[p[i-1]];",
    "        else c[p[i]]=c[p[i-1]]+1;",
    "    }",
    "    ll k=0;",
    "    while((1<<k)<n)",
    "    {",
    "        vector<pair<pair<ll,ll>,ll>>su(n);",
    "        for(ll i=0;i<n;i++) su[i]={{c[i],c[(i+(1<<k))%n]},i};",
    "        sort(su.begin(),su.end());",
    "        for(ll i=0;i<n;i++) p[i]=su[i].second;",
    "        c[p[0]]=0;",
    "        for(ll i=1;i<n;i++)",
    "        {",
    "            if(su[i].first==su[i-1].first) c[p[i]]=c[p[i-1]];",
    "            else c[p[i]]=c[p[i-1]]+1;",
    "        }",
    "        k++;",
    "    }",
    "    return p;",
    "}"
  ],
  "description": "Suffix Array O(nlog^2n)"
}
}