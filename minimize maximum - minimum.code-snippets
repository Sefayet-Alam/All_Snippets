{
	"minimize maximum - minimum": {
  "prefix": "minimize maximum - minimum",
  "body": [
    "ll n;",
    "vector<ll> tmp(N);",
    "",
    "bool func(ll pos)",
    "{",
    "    vector<ll> vec(n);",
    "    vec = tmp;",
    "    // deb(vec);",
    "    ll ex = 0;",
    "    for (ll i = 0; i < n; i++)",
    "    {",
    "        if (vec[i] >= pos)",
    "        {",
    "            ll toad=vec[i]-pos;",
    "            ex += toad;",
    "            vec[i]-=toad;",
    "        }",
    "        else",
    "        {",
    "            if (ex == 0)",
    "                return false;",
    "            ll tomin = min(ex, pos - vec[i]);",
    "            ex -= tomin;",
    "            vec[i] += tomin;",
    "        }",
    "    }",
    "    for(auto it:vec){",
    "        if(it<pos) return false;",
    "    }",
    "    return true;",
    "}",
    "ll bs(ll low, ll high)",
    "{",
    "    ll mid;",
    "    ll ans = low;",
    "    while (low <= high)",
    "    {",
    "        mid = low + (high - low) / 2;",
    "        // cout<<mid<<\" \"<<func(mid)<<endl;",
    "        if (func(mid))",
    "        {",
    "            ans = mid;",
    "            low = mid + 1;",
    "        }",
    "        else",
    "        {",
    "            high = mid - 1;",
    "        }",
    "    }",
    "    ",
    "    return ans;",
    "}",
    "",
    "bool func2(ll pos)",
    "{",
    "    vector<ll> vec(n);",
    "    vec = tmp;",
    "    ll ex = 0;",
    "    for (ll i = 0; i < n; i++)",
    "    {",
    "        if (vec[i] > pos)",
    "        {",
    "            ex += vec[i] - pos;",
    "        }",
    "        else if (vec[i] < pos)",
    "        {",
    "            if (ex == 0)",
    "                continue;",
    "            ll tomin = min(ex, pos - vec[i]);",
    "            vec[i] += tomin;",
    "            ex -= tomin;",
    "        }",
    "    }",
    "    if(ex>0) return false;",
    "    return true;",
    "}",
    "",
    "ll bs2(ll low, ll high)",
    "{",
    "    ll mid;",
    "    ll ans = high;",
    "    while (low <= high)",
    "    {",
    "        mid = low + (high - low) / 2;",
    "        // cout<<mid<<\" \"<<func(mid)<<endl;",
    "        if (func2(mid))",
    "        {",
    "            ans = mid;",
    "            high = mid - 1;",
    "        }",
    "        else",
    "        {",
    "            low = mid + 1;",
    "        }",
    "    }",
    "    return ans;",
    "}",
    "",
    "int main()",
    "{",
    "    fast;",
    "    ll t;",
    "    // setIO();",
    "    // ll tno=1;;",
    "    t = 1;",
    "    cin >> t;",
    "",
    "    for(ll tc=1;tc<=t;tc++)",
    "    {",
    "        ",
    "        cin >> n;",
    "        tmp.resize(n);",
    "        cin >> tmp;",
    "",
    "        ll l = 0, r = 1e12;",
    "        ll minm = bs(l, r);",
    "        ll ex=0;",
    "        ll need=0;",
    "        for(ll i=n-1;i>=0;i--){",
    "            if(tmp[i]<minm){",
    "                ex+=minm-tmp[i];",
    "                tmp[i]=minm;",
    "            }",
    "            else if(tmp[i]>minm){",
    "                ll tomin=min(ex,tmp[i]-minm);",
    "                tmp[i]-=tomin;",
    "                ex-=tomin;",
    "            }",
    "        }",
    "        // deb(tmp);",
    "        ll r2 = *max_element(all(tmp));",
    "        ll l2 = minm;",
    "        ll maxm = bs2(l2, r2);",
    "        // deb2(minm,maxm);",
    "        // deb(tmp);",
    "        ll ans = maxm - minm;",
    "        cout << ans << nn;",
    "    }",
    "",
    "    return 0;",
    "}"
  ],
  "description": "minimize maximum - minimum"
}
}