{
	"DP Divide and Conquer O(N*K*logN)": {
  "prefix": "DP Divide and Conquer O(N*K*logN)",
  "body": [
    "",
    "vector<ll> a(N);",
    "ll c[N][N], dp[810][N]; // dp[i][j]=minimum cost for dividing [1...j] into i parts",
    "ll cost(ll i, ll j)",
    "{",
    "    return c[i][j];",
    "}",
    "void DivideConquer(ll i, ll l, ll r, ll optl, ll optr)",
    "{",
    "    if (l > r)",
    "        return;",
    "    ll mid = (l + r) / 2;",
    "    dp[i][mid] = 0; // for minimum cost change it to INF",
    "    ll opt = -1;",
    "    for (ll k = optl; k <= min(mid, optr); k++)",
    "    {",
    "        ll c = dp[i - 1][k] + cost(k + 1, mid);",
    "        if (c > dp[i][mid])",
    "        { // for minm cost just change > to < only and rest of the algo should not be changed",
    "            dp[i][mid] = c;",
    "            opt = k;",
    "        }",
    "    }",
    "    // for opt[1..j]<=opt[1...j+1] i.e. cost(1,j)<=cost(1,j+1)",
    "    DivideConquer(i, l, mid - 1, optl, opt);",
    "    DivideConquer(i, mid + 1, r, opt, optr);",
    "    // for opt[1...j]>=opt[1...j+1] i.e. cost(1,j)>=cost(1,j+1)",
    "    // yo(i,l,mid-1,opt,optr);",
    "    // yo(i,mid+1,r,optl,opt);",
    "}",
    "",
    "int main()",
    "{",
    "    fast;",
    "    ll t;",
    "    // setIO();",
    "    // ll tno=1;;",
    "    t = 1;",
    "    cin >> t;",
    "",
    "    while (t--)",
    "    {",
    "        ll n, k;",
    "        cin >> n >> k;",
    "        for (ll i = 1; i <= n; i++)",
    "            cin >> a[i];",
    "",
    "        for (ll i = 1; i <= n; i++)",
    "        {",
    "            ll curr = 0;",
    "            for (ll j = i; j <= n; j++)",
    "            {",
    "                curr |= a[j];",
    "                c[i][j] = curr;",
    "            }",
    "        }",
    "        for (ll i = 1; i <= n; i++)",
    "            dp[1][i] = cost(1, i);",
    "        for (ll i = 2; i <= k; i++)",
    "            DivideConquer(i, 1, n, 1, n);",
    "",
    "        cout << dp[k][n] << nn;",
    "    }",
    "",
    "    return 0;",
    "}",
    ""
  ],
  "description": "DP Divide and Conquer O(N*K*logN)"
}
}