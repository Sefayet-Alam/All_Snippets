{
	"maximum no of non intersecting ranges": {
  "prefix": "maximum no of non intersecting ranges",
  "body": [
    "",
    "bool cmp(pll a,pll b){",
    "    return a.second<b.second;",
    "}",
    "int main()",
    "{",
    "    fast;",
    "    ll t;",
    "    // setIO();",
    "    // ll tno=1;;",
    "    t = 1;",
    "    cin >> t;",
    "",
    "    while (t--)",
    "    {",
    "        ll n;",
    "        cin >> n;",
    "        vector<ll> vec(n);",
    "        cin >> vec;",
    "        ll sum = 0;",
    "        map<ll,ll>sums;",
    "        vector<pll>ranges;",
    "        sums[0]=-1;",
    "        for (ll i = 0; i < n; i++)",
    "        {",
    "            sum += vec[i];",
    "            if(sums.find(sum)!=sums.end()){",
    "                ranges.push_back({sums[sum]+1,i});",
    "            }",
    "            sums[sum]=i;",
    "        }",
    "        sort(all(ranges),cmp);",
    "        ll now=-1;",
    "        ll ans=0;",
    "        for(auto it:ranges){",
    "            if(it.first>now){",
    "                now=it.second;",
    "                now=it.second;",
    "                ans++;",
    "            }",
    "        }",
    "        cout<<ans<<nn;",
    "    }",
    "",
    "    return 0;",
    "}"
  ],
  "description": "maximum no of non intersecting ranges"
}
}