{
	"bitmask minimum m>n such that range and from n to m is x": {
  "prefix": "bitmask minimum m>n such that range and from n to m is x",
  "body": [
    "ll find_minimum_m(ll n,ll x){",
    "    if (n == x)",
    "        {",
    "            return x;",
    "        }",
    "        //   ll min10=M;",
    "        vector<ll> min11s;",
    "        ll min10 = -1;",
    "        bool f = 0;",
    "        for (ll i = 63; i >= 0; i--)",
    "        {",
    "            if (Check(n, i) && !Check(x, i))",
    "            {",
    "                ll curr = n | ((1LL << (i)) - 1);",
    "                //minimum curr>n such that i th bit is zero",
    "                min10 = max(min10, curr);",
    "            }",
    "            if (!Check(n, i) && Check(x, i))",
    "            {",
    "                f = 1;",
    "                break;",
    "            }",
    "            if (Check(n, i) && Check(x, i))",
    "            {",
    "                min11s.push_back(i);",
    "            }",
    "        }",
    "        ll n2 = min10;",
    "        // deb(n2);",
    "        if (n2 == -1)",
    "        {",
    "            n2 = n;",
    "        }",
    "        else",
    "        {",
    "            n2++;",
    "        }",
    "        for (auto it : min11s)",
    "        {",
    "            if ((n >> (it)) != (n2 >> (it)))",
    "            {",
    "                //checking if all it th bit from n to n2 is 1",
    "                f = 1;",
    "            }",
    "        }",
    "        // deb(n2);",
    "        if (f)",
    "        {",
    "            return -1;",
    "        }",
    "        else return n2;",
    "}"
  ],
  "description": "bitmask minimum m>n such that range and from n to m is x"
}
}