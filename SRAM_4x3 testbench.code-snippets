{
	"HDL SRAM_4x3 testbench": {
		"prefix": "HDL SRAM_4x3 testbench",
		"body": [
			"module SRAM_4x3_tb();",
			"    reg clk;",
			"    reg reset;",
			"    reg [2:0] Write_Data;",
			"    reg [1:0] Write_Address;",
			"    reg Write_Enable;",
			"    reg [1:0] Read_Address_1;",
			"    reg [1:0] Read_Address_2;",
			"    wire [2:0] Read_Data_1;",
			"    wire [2:0] Read_Data_2;",
			"",
			"    // Instantiate the DUT (Device Under Test)",
			"    SRAM_4x3 dut (",
			"        .clk(clk),",
			"        .reset(reset),",
			"        .Write_Data(Write_Data),",
			"        .Write_Address(Write_Address),",
			"        .Write_Enable(Write_Enable),",
			"        .Read_Address_1(Read_Address_1),",
			"        .Read_Address_2(Read_Address_2),",
			"        .Read_Data_1(Read_Data_1),",
			"        .Read_Data_2(Read_Data_2)",
			"    );",
			"",
			"    // Clock generation",
			"    always ",
			"    begin",
			"        clk = ~clk; ",
			"        #5;",
			"    end",
			"",
			"    // Initial test sequence",
			"    initial begin",
			"        // Dump file to record waveform",
			"        $dumpfile(\"SRAM_4x3_tb.vcd\");",
			"        $dumpvars(0, SRAM_4x3_tb);",
			"",
			"        // Initialize all signals",
			"        clk = 0;",
			"        reset = 1;",
			"        Write_Data = 3'b000;",
			"        Write_Address = 2'b00;",
			"        Write_Enable = 0;",
			"        Read_Address_1 = 2'b00;",
			"        Read_Address_2 = 2'b00;",
			"        #10;",
			"",
			"        // Deassert reset",
			"        reset = 0;",
			"        #10;",
			"",
			"        // Write to row 00",
			"        Write_Enable = 1;",
			"        Write_Address = 2'b00; Write_Data = 3'b001; Read_Address_1 = 2'b00; Read_Address_2 = 2'b01;",
			"        #10;",
			"",
			"        // Write to row 01",
			"        Write_Address = 2'b01; Write_Data = 3'b011; Read_Address_1 = 2'b00; Read_Address_2 = 2'b01;",
			"        #10;",
			"",
			"        // Write to row 10",
			"        Write_Address = 2'b10; Write_Data = 3'b101; Read_Address_1 = 2'b00; Read_Address_2 = 2'b10;",
			"        #10;",
			"",
			"        // Write to row 11",
			"        Write_Address = 2'b11; Write_Data = 3'b111; Read_Address_1 = 2'b00; Read_Address_2 = 2'b11;",
			"        #10;",
			"",
			"        // Disable Write",
			"        Write_Enable = 0;",
			"        #10;",
			"",
			"        // Read from different rows",
			"        Write_Address = 2'b11; Read_Address_1 = 2'b01; Read_Address_2 = 2'b11;",
			"        #10;",
			"",
			"        $finish;",
			"    end",
			"",
			"    // Monitor for observing signals during simulation",
			"    initial begin",
			"        $monitor(\"Time = %0t | clk = %b | reset = %b | WE = %b | WA = %b | WD = %b | RA1 = %b | RD1 = %b | RA2 = %b | RD2 = %b\", ",
			"                 $time, clk, reset, Write_Enable, Write_Address, Write_Data, ",
			"                                    Read_Address_1, Read_Data_1, Read_Address_2, Read_Data_2);",
			"    end",
			"",
			"endmodule",
			""
		],
		"description": "HDL SRAM_4x3 testbench"
	}
}